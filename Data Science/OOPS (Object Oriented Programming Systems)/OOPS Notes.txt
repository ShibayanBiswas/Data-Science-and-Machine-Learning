
Q) Which Of The Following Represents A Distinctly Identifiable Entity In The Real World ?
Answer: An object


Q) In Python, a class is ___________ for a concrete object.
Answer: a blueprint


Q) Which operator in python is used to access properties and methods of an object?
Answer: .


Q) Find the output of following code:
class sampleclass
    pass
s1=sampleclass()
setattr(s1,'age', 23 )
setattr(s1, 'name', 'John Doe' )
s1.gender ='male'
print(s1.__dict__)
Answer: {'age': 23, 'name': 'John Doe', 'gender': 'male'}


Q) What will be the output of following code ?
class Student:
     name = “Rohan”
     age = 16
s1 = Student()
s2 = Student()
print(s1.name,end=” “)
print(s2.name,end=” “)
Answer: Rohan Rohan


Q) What will be the output of following code ?
class Student:
    pp = 50
s1 = Student()
s1.pp= 58
s2 = Student()
s2.pp = 60
print(s1.pp)
Answer: 58


Q) Find the output of following code:
class sampleclass: 
    count = 0     
    def increase(self): 
        sampleclass.count += 1
s1 = sampleclass() 
s1.increase()         
print (s1.count,end=" ") 
s2 = sampleclass() 
s2.increase() 
print (s2.count,end=" ") 
print (sampleclass.count,end=" ") 
Answer: 1 2 2


Q) Find the output of following code:
class change:
     def __init__(self, x, y, z):
          self.a = x + y + z
x = change(1,2,3)
y = getattr(x, 'a')
setattr(x, 'a', y+1)
print(x.a)
Answer: 7


Q) What will be the output of following code ?
class Student:
    def __init__(self,name,age):
        self.name = “Rohan”
        self.age = 20

    def print_student_details():
        print(self.name, end= “ “)
        print(self.age)
s = Student()
s.print_student_details()
Answer: Error [Once you create an object of the Student class, it also expects two arguments i.e one for name and one for age. But in this code no argument is passed while creating an 
object of the Student class, hence it will throw an error]


Q) What will be the output of following code ?
class Student:
    def __init__(self,name,age):
        self.name = “Rohan”
        self.age = 20

    def print_student_details():
        print(self.name, end= “ “)
        print(self.age)
s = Student(“Parikh”,25)
s.print_student_details()
Answer: Error


Q) What will be the output of following code ?
class Student:
    def __init__(self,name,age):
        self.name = name
        self.age = age
    def print_student_details(self):
        print(self.name, end= “ “)
        print(self.age)
s = Student(“Rohan”,60)
s.print_student_details()
Answer: Rohan 60


Q) Analyze the following code:
class A:
     def __init__(self):
         self.x = 1
         self.__y = 1
     def getY(self):
         return self.__y
a = A()
a.__y = 45
print(a.getY())
Answer: The program runs fine and prints 1


Q) What will be the output of this code ?
class Student:
     def __init__(self,name,age):
        self.__name = name
        self.age = age
    def print_student_details():
        print(self.__name, end= “ “)
        print(self.age)

s = Student(“Rohan”,20)
print(s.name)
Answer: Error


Q) What will be the output of this code ?
class Student:
     def __init__(self,name,age):
        self.__name = name
        self.age = age
     def print_student_details(self):
        print(self.__name, end= “ “)
        print(self.age)
s = Student(“Rohan”,20)
s.print_student_details()
Answer: Rohan 20


Q) What will be the output of this code ?
  class Student:
      def __init__(self,name,age):
          self.name = name
          self.age = age
      def print_student_details():
          print(self.name, end=" " )
          print(self.age)

      @staticmethod
      def isTeen(age):
          return age>16

  a = Student.isTeen(18)
  print(a)
Answer: True