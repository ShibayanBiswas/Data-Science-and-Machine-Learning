(a) A given data of 12 Employees working in an investment firm. So add the Employee Data in Employee SQLite Database of Employee_Detail Table which was created by you. Print 'Done' when you
have completed the task.

Answer: import sqlite3
	  db = sqlite3.connect('Employee.sqlite')
	  cur = db.cursor()
	  cur.execute('Create table Employee_Details (Employee_ID int Primary Key, Name Text, Age int, Department Text, Salary int)')
	  employee_id = [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112]
	  name = ['Aadarsh', 'Aarti', 'Siddharth', 'Aman', 'Amit', 'Shivansh', 'Vaibhav', 'Himanshu', 'Raman', 'Kunal', 'Adhira', 'Tanya']
	  age = [25, 27, 25, 24, 30, 26, 23, 26, 25, 26, 29, 24]
	  department = ['Marketing', 'Operations', 'Finance', 'Human Resource', 'Marketing', 'IT', 'Finance', 'IT', 'Operations', 'Marketing', 'Human Resource', 'Marketing']
	  salary = [50000, 60000, 85000, 75000, 50000, 90000, 85000, 90000, 60000, 50000, 75000, 50000]
	  for i in range(0, 12):
		cur.execute('Insert into Employee_Details values (?, ?, ?, ?, ?)', (employee_id[i], name[i], age[i], department[i], salary[i]))
	  	db.commit()
	  print('done')


(b) Find the employee_id of employee whose is working in Finance Department in Investment firm from Employee SQLite Database. Print the employee_id as integer value.

Output Format:

employee_id_1
employee_id_2
.  .  .
.  .  .

Answer: import sqlite3
	  db = sqlite3.connect('Employee.sqlite')
	  cur = db.cursor()
	  cur.execute('Select * from Employee where department == "Finance"')
	  data = cur.fetchall()
	  for i in range(0, len(data)):
		print(data[i][0], end = "\n")


(c) Find the number of employee working in different department in an investment firm from Employee SQLite Database. Print the department and number of employee.

Output Format:

department_1 num_employee_1
department_2 num_employee_2
department_3 num_employee_3
.  .  . 
.  .  .
.  .  .

Answer: import sqlite3
	  db = sqlite3.connect('Employee.sqlite')
	  cur = db.cursor()
	  cur.execute('Select department, count(*) from Employee group by department')
	  data = cur.fetchall()
	  for i in range(0, len(data)):
		print(data[i][0], data[i][1], end = "\n")


(d) IMDB.sqlite' database contains all details of movies and has three tables with name IMDB, genre and earning. Find the count of each genre present in IMDB movie dataset? Print the Genre
and number of movies present in that genre. Note: Ignore the empty value present in genre.

Output Format:

genre_1 num_movie_1
genre_2 num_movie_2
. . .
. . .

Answer: import pandas as pd
	  import sqlite3
	  db = sqlite3.connect('IMDB.sqlite')
	  imdb = pd.read_sql_query("Select * from IMDB", db)
	  earning = pd.read_sql_query("Select * from earning", db)
	  genre = pd.read_sql_query("Select * from genre", db)
	  genre_name = genre['genre'].value_counts().index
	  genre_count = genre['genre'].value_counts().values
	  for i in range(len(genre_name)):
	  	if genre_name != '':
		    print(genre_name[i], genre_count[i])


(e) IMDB.sqlite' database contains all details of movies and has three tables with name IMDB, genre and earning. Find the highest-grossing movie (i.e domestic earning + worldwide earning). in IMDB database.
Print the rating of that movie. 

Output Format: 

rating

Answer: import pandas as pd
	  import sqlite3
	  db = sqlite3.connect('IMDB.sqlite')
	  imdb = pd.read_sql_query("Select * from IMDB", db)
	  earning = pd.read_sql_query("Select * from earning", db)
	  genre = pd.read_sql_query("Select * from genre", db)
	  imdb_earning = pd.merge(imdb, earning, on = "Movie_id")
	  imdb_earning['Domestic'].replace('', 0, inplace = True)
	  imdb_earning['Worldwide'].replace('', 0, inplace = True)
	  imdb_earning['Total Earning'] = imdb_earning['Domestic'] + imdb_earning['Worldwide']	# Creating a new column
	  print(imdb[imdb_earning['Total Earning'] == max(imdb_earning['Total Earning'])]['Rating'].values[0])
