
(a) Square Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 4
 4444
 4444
 4444
 4444

Answer: num = int(input())
	i = 1
	while i <= num:
    		j = 1
    		while j <= num:
        		print(num, end = "")
        		j += 1
    		print()
    		i += 1 


(b) Triangular Star Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 4
 *
 **
 ***
 ****

Answer: num = int(input())
	i = 1
	while i <= num:
    		j = 1
    		while j <= i:
        		print("*", end="")
        		j += 1
    		print()
    		i += 1


(c) Triangle Number Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 4
 1
 22
 333
 4444

Answer: num = int(input())
	i = 1
	while i <= num:
    		j = 1
    		while j <= i:
        		print(i, end="")
        		j += 1
    		print()
    		i += 1


(d) Reverse Number Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 4
 1
 21
 321
 4321

Answer: num = int(input())
	i = 1
	while i <= num:
    		j = i
    		while j >= 1:
        		print(j, end="")
        		j -= 1
    		print()
    		i += 1


(e) Alpha Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 3
 A
 BB
 CCC

Answer: n = int(input())
	for i in range(65, 65 + n):
    		for j in range(65, i + 1):
        		print(chr(i),end = '')
    		print("")


(f) Character Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 4
 A
 BC
 CDE
 DEFG

Answer: n = int(input())
	currRow = 1
	while currRow <= n:
    		currCol = 1
    		ch = ord('A') + currRow - 1
    		while currCol <= currRow:
        		print(chr(ch + currCol - 1),end = "")
        		currCol += 1
    		print()
    		currRow += 1


(g) Interesting Alphabets- Print the following pattern for the given number of rows.
Pattern for N = 5
 E
 DE
 CDE
 BCDE
 ABCDE

Answer: n = int(input())
	for i in range(n, 0, -1):
    		for j in range(i, n + 1):
        		print(chr(j + 64), end = "")
    		print("")


(h) Inverted Number Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 4
 4444
 333
 22
 1

Answer: n = int(input())
	m = n
	i = 1
	while i <= n:
    		j = 1
    		while j <= n - i + 1:
        		print(m, end = "")
        		j = j + 1
    		print()
    		i = i + 1
    		m = m - 1


(i) Mirror Number Pattern- Print the following pattern for the given N number of rows.
Pattern for N = 4
    1
   12
  123
 1234

Answer: n = int(input())
	for x in range(1, n + 1):
    		for y in range(n, x, -1):
        		print(" ", end = "")
    		for z in range(1, x + 1):
        		print(z, end = "")
    		print("")


(j) Star Pattern- Print the following pattern
Pattern for N = 4
    *
   ***
  *****
 *******

Answer: n = int(input())
	currRow = 1
	while currRow <= n:
    		space = 1
    		while space <= (n - currRow):
        		print(" ", end = "")
        		space += 1
    		currCol = 1
    		while currCol <= ((2 * currRow) - 1):
        		print("*", end = "")
        		currCol += 1
    		print()
    		currRow += 1


(k) Triangle of Numbers- Print the following pattern for the given number of rows.
Pattern for N = 4
    1
   232
  34543
 4567654

Answer: n = int(input())
	currRow = 1
	while currRow <= n:
    		spaces = 1
    		while spaces <= (n - currRow) :
        		print(" ", end = "")
        		spaces += 1
    		currCol = 1
    		valToPrint = currRow
    		while currCol <= currRow :
        		print(valToPrint, end = "")
        		valToPrint += 1
        		currCol += 1
    		currCol = 1
    		valToPrint = 2 * currRow - 2 
    		while currCol <= currRow - 1 :
        		print(valToPrint, end = "")
        		valToPrint -= 1
        		currCol += 1 
    		print()
    		currRow += 1


(l) Diamond of stars- Print the following pattern for the given number of rows.
Note: N is always odd. Pattern for N = 5
    *
   ***
  *****
   ***
    *

Answer: n = int(input())
	firstHalf = (n + 1) // 2
	secondHalf = n // 2
	#First Half
	currRow = 1 
	while currRow <= firstHalf:
    		spaces = 1 
    		while spaces <= (firstHalf - currRow) :
        		print(" ", end = "")
        		spaces += 1
    		currCol = 1
    		while currCol <= (2 * currRow) - 1 :
        		print("*", end = "")
        		currCol += 1
        	print()
    		currRow += 1
	#Second Half 
	currRow = secondHalf 
	while currRow >= 1 :
    		spaces = 1
    		while spaces <= (secondHalf - currRow + 1) :
        		print(" ", end = "") 
        		spaces += 1
    		currCol = 1 
    		while currCol <= (2 * currRow) - 1 :
        		print("*", end = "") 
        		currCol += 1
    		print()
    		currRow -= 1